# using suggestions from:
#   github.com/jtilly/R-travis-container-example/blob/master/.travis.yml
#   kieranhealy.org/blog/archives/2015/10/16/using-containerized-travis-ci-to-check-r-in-rmarkdown-files/
#   gist.github.com/willprice/e07efd73fb7f13f917ea

language: r
#r:
#  - release
#  - devel
cache: packages

# use containers (so no sudo)
sudo: false

# trigger on pushes to master branch
branches:
  only:
   - master

# really would prefer r lang pre-installed with all packages here
# install R: use r-packages-precise (https://cran.r-project.org/bin/linux/ubuntu/precise/) 
# as source which is white listed (https://github.com/travis-ci/apt-source-whitelist/)
addons:
  apt:
    sources:
    - r-packages-precise
    packages:
    - r-base-dev	
    - r-recommended

# cache local R libraries directory:
#cache:
#  directories:
#    - ~/Rlib

# - install package with dependencies
install:
#  - mkdir -p ~/Rlib
#  - echo 'R_LIBS=~/Rlib' > .Renviron
  - echo 'options(repos = "http://cran.r-project.org")' > .Rprofile
  - Rscript -e 'if(!"dse" %in% rownames(installed.packages())) { install.packages("dse", dependencies = TRUE) }'

# run checks
script:
  - OS_TAG=`uname -i`_`uname -o`
  - OS_TAG=${OS_TAG////-}  # rm / from name for file

  - cd ${HOME}/build/pdgilbert/

#  - git clone --depth=10 --branch=${OS_TAG} https://${GITHUB_TOKEN}@github.com/pdgilbert
#  only need ${OS_TAG} and master but ...
  - git clone https://${GITHUB_TOKEN}@github.com/pdgilbert/2piQA.git  ${OS_TAG}
  - cd ${OS_TAG}
  - git checkout  ${OS_TAG}

  - CHANGE=`git diff-tree --no-commit-id --name-only -r ${TRAVIS_COMMIT}`
  - echo CHANGE would be  ${CHANGE}
  - CHANGE='R/PkgSnippets/dse/1stSnippetTest/fail1.R R/PkgSnippets/dse/2ndSnippetTest/SnippetDescription.txt'

  - uname -rio               >KERNEL_VERSION
  - echo ${TRAVIS_COMMIT}    >TRAVIS_COMMIT
  - echo ${TRAVIS_OS_NAME}   >TRAVIS_OS_NAME
  - echo ${TRAVIS_R_VERSION} >TRAVIS_R_VERSION

  - git config --global user.email "travis@travis-ci.org"
  - git config --global user.name "Travis CI"
  - git config --global push.default simple #to squelch warning message

#  pull with rebase might be preferred here?
  - git merge -s recursive -X theirs master -m "updated snippet files (from master into branch)." 

#  loop is for case of changes in multiple snippet dirs
  - (cd R/ ; for f in $CHANGE ; do ./SnippetTest ${f} ; done )


after_success:
  - git push # origin HEAD:${OS_TAG}
#  - git push --quiet --set-upstream

# send e-mails on changes
#notifications:
#  email:
#    on_success: change
#    on_failure: change
